BRIEF

	This task is to implement C-LIBRABRY and DEMO APP for zebra scanner.
	LIB is written by C standard library only and simple API design is
	crucial target.

ISSUE

	1. Default Reset: (HARDWARE/CLOSED FIRMWARE issue)

		Default host of USB interface is SNAPI, need to be SSI.

		- Status: On-going. Workaround fix.

		- Phenomenon: accidentally reset to default. Statistic until Sep 13:
			+ Touch board (> 5 times)
			+ Suddenly power off (> 2 times)
			+ Software not good (maybe transmit while decoder running) (1 time)

		- Reason: __unknown__ yet.

		- Workaround:
			Step-1: use Windows app to change to SSI
			Step-2: write custom default
			(NOTE: need to implement in SW, current = scan barcode)
			=> Feasibility check is OK

		- TODO: Modules also need to change from SNAPI -> SSI at least 1 time.

		- Suggestion: contact with supplier for fixed-SSI-interface-ony firmware support

  		__RISK__ : factory reset is SNAPI and can not be changed by SW.
	
	2. Scanner does not response immediately. (SPECS LIMITATION/SOFTWARE issue)

		Response time is not /real time/.

		- Status: On-going

		- Phenomenon: Some big QR code (approximately > 4cm) is need to be moved around
		  and adjust the scanning distance to be scanned.

		- Reason: depend on specs of scanner and configuration of camera controller related
		  to illumination, aimming LED, capturing framerate.

		- Solution:
			+ Check specs for biggest supported QR code.
			+ Check manual for configuration to support wide range of QR code size.
			+ Check for real supported size range to report to PL to confirm with customer.
	
	3. Scanner is not perfectly response. (SOFTWARE issue)

		Successful rate of scanner is not 100%.

		- Status: On-going.

		- Phenomenon:
			+ Display nothing even target is in scanning range.
			+ Display a part of target content only.

		- Reason:
			+ Not good input buffer handling.
			+ I do not understand very clearly about behavior of termios

		- Solution:
			+ Compare correctness and availability between interrupt and polling design.
			+ Schedule to clean input buffer.
			+ Schedule to getting whole package when detected before print out, otherwise, display error.
			+ Implement NAK response to request resending from decoder.
	
FEATURE

	1. Scan barcode, QR code in 2 trigger mode:
		+ Auto detect target: supported
		+ Scan when receive trigger from HOST (ARM board): used to supported
	   	  (have not been tested when change to state machine to support both depend on user config)
	
	2. Display Barcode:
		+ __raw__ string content: supported.
		+ Structured content (Ex: name card): not supported.
	
	3. Enable/disable scanner:
		+ Simulated via Ctrl+C (SIGINT): testing.
		+ Control via external peripheral: not supported.	
